clear all
clc
A = [1 2;1 1;1 -2];
B = [10;6;1];
C = [2,1];

x1 = 0:1:max(B);
x21 = (B(1) - A(1, 1) * x1) / A(1,2);
x22 = (B(2) - A(2, 1) * x1) / A(2,2);
x23 = (B(3) - A(3,1) * x1) / A(3,2);

x21 = max(0, x21);
x22 = max(0, x22);
x23 = max(0, x23);

plot(x1, x21, 'r', x1, x22, 'b',x1,x23,'k');

title('graph');
xlabel('x1');
ylabel('x2');
legend('x1 + 2x2 = 10', 'x1 + x2 = 6');





% Phase 3: find corner points with axes
c1 = find(x1 == 0);
c2 = find(x21 == 0);
line1 = [x1(:,[c2, c1]); x21(:,[c2, c1])]';

c3 = find(x22 == 0);
line2 = [x1(:,[c3, c1]); x22(:,[c3, c1])]';

c4 = find(x23 == 0);
line3 = [x1(:,[c4, c1]); x23(:,[c4, c1])]';
lines = [line1; line2; line3];
%lines = [line1; line2];
corpt = unique(lines, 'rows');

% Phase 4: find
sol = [0; 0];
for i = 1:size(A, 1)
    hg1=A(i,:);
    b1=B(i,:);
    for j = (i+1):size(A, 1)
        hg2=A(j,:);
        b2=B(j,:);
        Aa=[hg1;hg2];
        Bb=[b1;b2];
        x = Aa \ Bb;
        sol = [sol x];
    end
end
pt = sol';



% Phase 5: all points
allpt = [pt;corpt];
points = unique(allpt, 'rows');

% phase6-Feasible pts
for i=1:size(points,1)
const1(i)=A(1,1)*points(i,1)+A(1,2)*points(i,2)-B(1);
const2(i)=A(2,1)*points(i,1)+A(2,2)*points(i,2)-B(2);
const3(i)=A(3,1)*points(i,1)+A(3,2)*points(i,2)-B(3);
s1=find(const1>0);
s2=find(const2>0);
s3=find(const3>0);
end
S=unique([s1 s2 s3])
points(S,:)=[]
%PHASE7-Value of objective function
value=points*C'
[obj, index] = max(value);

X1 = points(index, 1);
X2 = points(index, 2);

disp('Optimal Solution:')
disp(['X1: ' num2str(X1)])
disp(['X2: ' num2str(X2)])
disp(['Optimal Objective Value: ' num2str(obj)])
















clear all
clc
A=[2,3,-1,4;1,-2,6,-7];
B=[8;-3];
C=[2 3 4 7];

m=size(A,1);
n=size(A,2);

nCm=nchoosek(n,m);
p=nchoosek(1:n,m);

sol=[];
if n>=m
    for i=1:nCm
        y=zeros(n,1);
        x=A(:,p(i,:))\B;
        if all(x>=0 & x~=inf & x~=-inf)
            y(p(i,:))=x;
            sol=[sol y];
        end
    end
else
    error('constraints less')
end
z=C*sol;
[bfs,ind]=min(z);
bfs
